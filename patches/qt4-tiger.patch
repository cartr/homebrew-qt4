--- src/corelib/io/qfilesystemengine_unix.cpp.orig	2017-08-31 20:54:04.000000000 +0200
+++ src/corelib/io/qfilesystemengine_unix.cpp	2017-08-31 20:58:13.000000000 +0200
@@ -83,6 +83,7 @@
     return (fileInfo->finderFlags & kIsInvisible);
 }
 
+#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5
 static bool isPackage(const QFileSystemMetaData &data, const QFileSystemEntry &entry)
 {
     if (!data.isDirectory())
@@ -138,6 +139,7 @@
     FolderInfo *folderInfo = reinterpret_cast<FolderInfo *>(catalogInfo.finderInfo);
     return folderInfo->finderFlags & kHasBundle;
 }
+#endif
 
 #else
 static inline bool _q_isMacHidden(const char *nativePath)
@@ -529,8 +531,22 @@
 
 #if !defined(QWS) && !defined(Q_WS_QPA) && defined(Q_OS_MAC)
     if (what & QFileSystemMetaData::BundleType) {
+#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5
         if (entryExists && isPackage(data, entry))
             data.entryFlags |= QFileSystemMetaData::BundleType;
+#else
+        if (entryExists && data.isDirectory()) {
+            QCFType<CFStringRef> path = CFStringCreateWithBytes(0,
+                    (const UInt8*)nativeFilePath, nativeFilePathLength,
+                    kCFStringEncodingUTF8, false);
+            QCFType<CFURLRef> url = CFURLCreateWithFileSystemPath(0, path,
+                    kCFURLPOSIXPathStyle, true);
+
+            UInt32 type, creator;
+            if (CFBundleGetPackageInfoInDirectory(url, &type, &creator))
+                data.entryFlags |= QFileSystemMetaData::BundleType;
+        }
+#endif
         data.knownFlagsMask |= QFileSystemMetaData::BundleType;
     }
 #endif
--- src/gui/dialogs/qfontdialog_mac.mm.orig	2017-08-31 21:41:56.000000000 +0200
+++ src/gui/dialogs/qfontdialog_mac.mm	2017-08-31 21:55:51.000000000 +0200
@@ -141,6 +141,7 @@
     QFont newFont;
     if (cocoaFont) {
         int pSize = qRound([cocoaFont pointSize]);
+#if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
         CTFontDescriptorRef font = CTFontCopyFontDescriptor((CTFontRef)cocoaFont);
         // QCoreTextFontDatabase::populateFontDatabase() is using localized names
         QString family = QCFString::toQString((CFStringRef) CTFontDescriptorCopyLocalizedAttribute(font, kCTFontFamilyNameAttribute, NULL));
@@ -151,6 +152,23 @@
         newFont.setStrikeOut(resolveFont.strikeOut());
 
         CFRelease(font);
+#else
+	// This pre-Leopard version is buggy and was fixed in 717e36037cf246aa201c0aaf15a5dcbd7883f159
+	// see QTBUG-27415 https://codereview.qt-project.org/#/c/42830/
+        QString family(qt_mac_NSStringToQString([cocoaFont familyName]));
+        QString typeface(qt_mac_NSStringToQString([cocoaFont fontName]));
+
+        int hyphenPos = typeface.indexOf(QLatin1Char('-'));
+        if (hyphenPos != -1) {
+            typeface.remove(0, hyphenPos + 1);
+        } else {
+            typeface = QLatin1String("Normal");
+        }
+
+        newFont = QFontDatabase().font(family, typeface, pSize);
+        newFont.setUnderline(resolveFont.underline());
+        newFont.setStrikeOut(resolveFont.strikeOut());
+#endif
     }
     return newFont;
 }
--- src/gui/painting/qpaintengine_mac.cpp.orig	2017-08-31 22:56:01.000000000 +0200
+++ src/gui/painting/qpaintengine_mac.cpp	2017-08-31 23:10:20.000000000 +0200
@@ -334,7 +334,16 @@
     if ((colorSpace = m_displayColorSpaceHash.value(displayID)))
         return colorSpace;
 
+#if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
     colorSpace = CGDisplayCopyColorSpace(displayID);
+#else
+    CMProfileRef displayProfile = 0;
+    CMError err = CMGetProfileByAVID((CMDisplayIDType)displayID, &displayProfile);
+    if (err == noErr) {
+        colorSpace = CGColorSpaceCreateWithPlatformColorSpace(displayProfile);
+        CMCloseProfile(displayProfile);
+    }
+#endif
     if (colorSpace == 0)
         colorSpace = CGColorSpaceCreateDeviceRGB();
 
--- src/gui/painting/qprintengine_mac.mm.orig	2017-08-31 21:35:19.000000000 +0200
+++ src/gui/painting/qprintengine_mac.mm	2017-08-31 21:37:56.000000000 +0200
@@ -187,7 +187,11 @@
             paperMargins.top = topMargin;
             paperMargins.right = rightMargin;
             paperMargins.bottom = bottomMargin;
+#if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
             PMPaperCreateCustom(printer, paperId, QCFString("Custom size"), customSize.width(), customSize.height(), &paperMargins, &customPaper);
+#else
+            PMPaperCreate(printer, paperId, QCFString("Custom size"), customSize.width(), customSize.height(), &paperMargins, &customPaper);
+#endif
             PMPageFormat tmp;
             PMCreatePageFormatWithPMPaper(&tmp, customPaper);
             PMCopyPageFormat(tmp, format);
--- src/gui/text/qfontdatabase_mac.cpp.orig	2017-08-31 22:45:17.000000000 +0200
+++ src/gui/text/qfontdatabase_mac.cpp	2017-08-31 23:10:46.000000000 +0200
@@ -546,6 +546,7 @@
 
 QString QFontDatabase::resolveFontFamilyAlias(const QString &family)
 {
+#if defined(QT_MAC_USE_COCOA) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
     QCFString expectedFamily = QCFString(family);
 
     QCFType<CFMutableDictionaryRef> attributes = CFDictionaryCreateMutable(NULL, 0,
@@ -563,6 +564,10 @@
 
     QCFString familyName = (CFStringRef) CTFontDescriptorCopyLocalizedAttribute(matched, kCTFontFamilyNameAttribute, NULL);
     return familyName;
+#else
+    // https://bugreports.qt.io/browse/QTBUG-25417?focusedCommentId=185393&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-185393
+    return family;
+#endif
 }
 
 QT_END_NAMESPACE
--- src/network/kernel/qnetworkproxy_mac.cpp.orig	2017-08-31 21:05:13.000000000 +0200
+++ src/network/kernel/qnetworkproxy_mac.cpp	2017-08-31 21:05:44.000000000 +0200
@@ -148,6 +148,7 @@
 }
 
 
+#if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
 static QNetworkProxy proxyFromDictionary(CFDictionaryRef dict)
 {
     QNetworkProxy::ProxyType proxyType = QNetworkProxy::DefaultProxy;
@@ -180,6 +181,7 @@
 
     return QNetworkProxy(proxyType, hostName, port, user, password);
 }
+#endif
 
 const char * cfurlErrorDescription(SInt32 errorCode)
 {
